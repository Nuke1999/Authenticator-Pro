{"version":3,"file":"options.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/options.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n  function applySavedTheme() {\n    chrome.storage.local.get(\"theme\", (result) => {\n      if (result.theme) {\n        document.body.classList.add(result.theme);\n      }\n    });\n  }\n\n  applySavedTheme();\n  let webcamOnIcon = document.createElement(\"img\");\n  webcamOnIcon.src = \"./icons/video.svg\";\n  webcamOnIcon.className = \"webcam-on-icon\";\n  webcamOnIcon.id = \"webcam-on-icon\";\n\n  const cameraPermissionButton = document.getElementById(\n    \"camera-permission-button\"\n  );\n\n  cameraPermissionButton.addEventListener(\"click\", () => {\n    // console.log(\"Requesting camera permission\");\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((stream) => {\n        // console.log(\"Camera permission granted\");\n        stream.getTracks().forEach((track) => track.stop());\n        chrome.runtime.sendMessage({ action: \"cameraPermissionGranted\" });\n        window.close();\n      })\n      .catch((err) => {\n        // console.log(\"The following error occurred: \", err.name);\n        chrome.runtime.sendMessage({ action: \"cameraPermissionDenied\" });\n        window.close();\n      });\n  });\n\n  cameraPermissionButton.click();\n});\n"],"names":[],"sourceRoot":""}