{"version":3,"file":"options.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/options.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\r\n  function applySavedTheme() {\r\n    chrome.storage.local.get(\"theme\", (result) => {\r\n      if (result.theme) {\r\n        document.body.classList.add(result.theme);\r\n      }\r\n    });\r\n  }\r\n\r\n  applySavedTheme();\r\n  let webcamOnIcon = document.createElement(\"img\");\r\n  webcamOnIcon.src = \"./icons/video.svg\";\r\n  webcamOnIcon.className = \"webcam-on-icon\";\r\n  webcamOnIcon.id = \"webcam-on-icon\";\r\n\r\n  const cameraPermissionButton = document.getElementById(\r\n    \"camera-permission-button\"\r\n  );\r\n\r\n  cameraPermissionButton.addEventListener(\"click\", () => {\r\n    // console.log(\"Requesting camera permission\");\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        // console.log(\"Camera permission granted\");\r\n        stream.getTracks().forEach((track) => track.stop());\r\n        chrome.runtime.sendMessage({ action: \"cameraPermissionGranted\" });\r\n        window.close();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(\"The following error occurred: \", err.name);\r\n        chrome.runtime.sendMessage({ action: \"cameraPermissionDenied\" });\r\n        window.close();\r\n      });\r\n  });\r\n\r\n  cameraPermissionButton.click();\r\n});\r\n"],"names":[],"sourceRoot":""}